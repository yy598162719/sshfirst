<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd


	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启包扫描-->
    <context:component-scan base-package="com.ssh"/>

    <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置C3P0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="5"></property>
        <property name="maxPoolSize" value="20"></property>
        <property name="checkoutTimeout" value="120"></property>
        <property name="idleConnectionTestPeriod" value="3000"></property>
    </bean>

    <!-- 配置Service -->
    <bean id="customerService" class="com.ssh.service.impl.CustomerServiceImpl">
        <property name="customerDao" ref="customerDao"/>
    </bean>
    <bean id="userService" class="com.ssh.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    <bean id="baseDictService" class="com.ssh.service.impl.BaseDictServiceImpl">
        <property name="baseDictDao" ref="baseDictDao"/>
    </bean>
    <!-- 配置DAO -->
    <bean id="customerDao" class="com.ssh.dao.impl.CustomerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="userDao" class="com.ssh.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="baseDictDao" class="com.ssh.dao.impl.BaseDictDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置Action -->
    <bean id="customerAction" class="com.ssh.web.action.CustomerAction" scope="prototype">
        <property name="customerService" ref="customerService"/>
    </bean>
    <bean id="userAction" class="com.ssh.web.action.UserAction" scope="prototype">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="baseDictAction" class="com.ssh.web.action.BaseDictAction" scope="prototype">
        <property name="baseDictService" ref="baseDictService"/>
    </bean>

    <!-- 配置生成SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Hibernate的属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/crm</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>

        <!-- 加载映射文件 -->
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:com/ssh/domain</value>
            </list>
        </property>
    </bean>

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>

    </bean>

</beans>